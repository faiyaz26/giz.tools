{
  "id": "ini",
  "metadata": {
    "title": "INI",
    "date": "2022-12-30T09:51:44.000Z",
    "background": "bg-[#6d94c7]",
    "tags": null,
    "categories": [
      "Programming"
    ],
    "intro": "This is a quick reference cheat sheet for understanding and writing INI-format configuration files.\n",
    "plugins": [
      "copyCode"
    ]
  },
  "sections": [
    {
      "title": "Getting Started",
      "level": 2,
      "cards": [],
      "subsections": [
        {
          "title": "Introduction",
          "level": 3,
          "cards": [
            {
              "title": "Introduction",
              "body": "- INI is a configuration file with a fixed standard format\n- Base elements are keys or properties\n- Each key consists of a **name** and a **value**, separated by an equal sign (`=`)\n- **key name** is displayed to the **left side** of the equals sign\n- Equal sign (`=`) and semicolon (`;`) are **reserved** characters\n- INI configuration method comes from the MS-DOS operating system\n\nNow an informal standard for many configurations, other operating systems may use `.conf` or `.cfg` as a suffix",
              "footer": "",
              "spanConfig": "",
              "isShortcutsCard": false
            }
          ],
          "subsections": []
        },
        {
          "title": "Example",
          "level": 3,
          "cards": [
            {
              "title": "Example",
              "body": "```ini\n; Here are the comments\n[owner]\nname=John Doe\norganization=Acme Products\n\n[database]\n; Here are the comments\nserver=192.0.2.42\nport=143\nfile=\"acme payroll.dat\"\n\n[section.subsection]\nfoo = bar\n```",
              "footer": "",
              "spanConfig": "",
              "isShortcutsCard": false
            }
          ],
          "subsections": []
        },
        {
          "title": "Comments",
          "level": 3,
          "cards": [
            {
              "title": "Comments",
              "body": "```ini\n; This is the comment text and will be ignored\n```",
              "footer": "Comment (`#`)\n```ini\n```\nComments after a line (`;`,`#`) _(not standard)_\n```ini\nvar = a ; this is an inline comment\nfoo = bar # this is another inline comment\n```\nComments must appear alone on lines in some cases",
              "spanConfig": "",
              "isShortcutsCard": false
            }
          ],
          "subsections": []
        },
        {
          "title": "Sections",
          "level": 3,
          "cards": [
            {
              "title": "Sections",
              "body": "```ini\n[section]\nkey1 = a\nkey2 = b\n```",
              "footer": "The same as `JSON` below ðŸ‘‡\n```json\n{\n\"section\": {\n\"key1\": \"a\",\n\"key2\": \"b\"\n}\n}\n```",
              "spanConfig": "",
              "isShortcutsCard": false
            }
          ],
          "subsections": []
        },
        {
          "title": "Nesting (supported by some parsers)",
          "level": 3,
          "cards": [
            {
              "title": "Nesting (supported by some parsers)",
              "body": "```ini\n[section]\ndomain = cheatsheets.zip\n[section.subsection]\nfoo = bar\n```",
              "footer": "The same as `JSON` below ðŸ‘‡\n```json\n{\n\"section\": {\n\"domain\": \"cheatsheets.zip\"\n\"subsection\": {\n\"foo\": \"bar\"\n}\n}\n}\n```\nNest to previous section (shorthand)\n```ini\n[section]\ndomain = cheatsheets.zip\n[.subsection]\nfoo = bar\n```",
              "spanConfig": "",
              "isShortcutsCard": false
            }
          ],
          "subsections": []
        },
        {
          "title": "Escape character",
          "level": 3,
          "cards": [
            {
              "title": "Escape character",
              "body": "| sequence | meaning                                                                                          |\n| :------- | :----------------------------------------------------------------------------------------------- |\n| `\\\\`     | \\ (single backslash, escape escape character)                                                    |\n| `\\'`     | apostrophe                                                                                       |\n| `\\\"`     | double quotes                                                                                    |\n| `\\0`     | null character                                                                                   |\n| `\\a`     | ringtone/alert/sound                                                                             |\n| `\\b`     | Backspace, [Bell character] for some applications (https://en.wikipedia.org/wiki/Bell_character) |\n| `\\t`     | tab character                                                                                    |\n| `\\r`     | carriage return                                                                                  |\n| `\\n`     | newline                                                                                          |\n| `\\;`     | semicolon                                                                                        |\n| `\\#`     | number sign                                                                                      |\n| `\\=`     | equal sign                                                                                       |\n| `\\:`     | colon                                                                                            |\n| `\\x????` | Unicode character for the hexadecimal code point corresponding to ????                           |",
              "footer": "",
              "spanConfig": "",
              "isShortcutsCard": false
            }
          ],
          "subsections": []
        },
        {
          "title": "Array",
          "level": 3,
          "cards": [
            {
              "title": "Array",
              "body": "```ini\n[section]\ndomain = cheatsheets.zip\narray[]=first value\narray[]=second value\n```",
              "footer": "The same as `JSON` below ðŸ‘‡\n```json\n{\n\"section\": {\n\"domain\": \"cheatsheets.zip\",\n\"array\": [\"first value\", \"second value\"]\n}\n}\n```",
              "spanConfig": "",
              "isShortcutsCard": false
            }
          ],
          "subsections": []
        },
        {
          "title": "Interpreter",
          "level": 3,
          "cards": [
            {
              "title": "Interpreter",
              "body": "- [@go-ini/ini](https://github.com/go-ini/ini) _(golang)_\n- [@npm/ini](https://www.npmjs.com/package/ini) _(nodejs)_\n- [@zonyitoo/rust-ini](https://github.com/zonyitoo/rust-inii) _(rust)_\n- [@rxi/ini](https://www.npmjs.com/package/ini) _(c)_\n- [@pulzed/mINI](https://github.com/pulzed/mINI) _(c++)_\n- [@rickyah/ini-parser](https://github.com/rickyah/ini-parser) _(c#)_\n- [@Enichan/Ini](https://github.com/Enichan/Ini) _(c#)_",
              "footer": "",
              "spanConfig": "",
              "isShortcutsCard": false
            }
          ],
          "subsections": []
        }
      ]
    },
    {
      "title": "See also",
      "level": 2,
      "cards": [
        {
          "title": "See also",
          "body": "- [INI file configuration](https://en.wikipedia.org/wiki/INI_file)_(wikipedia.org)_",
          "footer": "",
          "spanConfig": "",
          "isShortcutsCard": false
        }
      ],
      "subsections": []
    }
  ]
}